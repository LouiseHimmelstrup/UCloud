// automatically generated by the FlatBuffers compiler, do not modify

package ucloud

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

@Suppress("unused")
@kotlin.ExperimentalUnsignedTypes
class SignIntentRequest : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : SignIntentRequest {
        __init(_i, _bb)
        return this
    }
    val signedIntent : String
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                throw AssertionError("No value for (required) field signedIntent")
            }
        }
    val signedIntentAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun signedIntentInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_23_3_3()
        fun getRootAsSignIntentRequest(_bb: ByteBuffer): SignIntentRequest = getRootAsSignIntentRequest(_bb, SignIntentRequest())
        fun getRootAsSignIntentRequest(_bb: ByteBuffer, obj: SignIntentRequest): SignIntentRequest {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createSignIntentRequest(builder: FlatBufferBuilder, signedIntentOffset: Int) : Int {
            builder.startTable(1)
            addSignedIntent(builder, signedIntentOffset)
            return endSignIntentRequest(builder)
        }
        fun startSignIntentRequest(builder: FlatBufferBuilder) = builder.startTable(1)
        fun addSignedIntent(builder: FlatBufferBuilder, signedIntent: Int) = builder.addOffset(0, signedIntent, 0)
        fun endSignIntentRequest(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
                builder.required(o, 4)
            return o
        }
    }
}
