// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: drives.proto

package drives

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	accounting "ucloud.dk/apm/accounting"
	resources "ucloud.dk/apm/resources"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BrowseRequest_Type int32

const (
	BrowseRequest_TYPE_UNSPECIFIED  BrowseRequest_Type = 0
	BrowseRequest_TYPE_MEMBER_FILES BrowseRequest_Type = 1
	BrowseRequest_TYPE_NORMAL       BrowseRequest_Type = 2
)

// Enum value maps for BrowseRequest_Type.
var (
	BrowseRequest_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_MEMBER_FILES",
		2: "TYPE_NORMAL",
	}
	BrowseRequest_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":  0,
		"TYPE_MEMBER_FILES": 1,
		"TYPE_NORMAL":       2,
	}
)

func (x BrowseRequest_Type) Enum() *BrowseRequest_Type {
	p := new(BrowseRequest_Type)
	*p = x
	return p
}

func (x BrowseRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BrowseRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_drives_proto_enumTypes[0].Descriptor()
}

func (BrowseRequest_Type) Type() protoreflect.EnumType {
	return &file_drives_proto_enumTypes[0]
}

func (x BrowseRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BrowseRequest_Type.Descriptor instead.
func (BrowseRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{4, 0}
}

type Drive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata      *resources.Metadata  `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Specification *Drive_Specification `protobuf:"bytes,2,opt,name=specification,proto3" json:"specification,omitempty"`
	Status        *Drive_Status        `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Drive) Reset() {
	*x = Drive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Drive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Drive) ProtoMessage() {}

func (x *Drive) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Drive.ProtoReflect.Descriptor instead.
func (*Drive) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{0}
}

func (x *Drive) GetMetadata() *resources.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Drive) GetSpecification() *Drive_Specification {
	if x != nil {
		return x.Specification
	}
	return nil
}

func (x *Drive) GetStatus() *Drive_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type DriveSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product         *accounting.ProductReference  `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	DriveOperations *DriveSupport_DriveOperations `protobuf:"bytes,3,opt,name=drive_operations,json=driveOperations,proto3" json:"drive_operations,omitempty"`
	FileOperations  *DriveSupport_FileOperations  `protobuf:"bytes,4,opt,name=file_operations,json=fileOperations,proto3" json:"file_operations,omitempty"`
	FileStatistics  *DriveSupport_FileStatistics  `protobuf:"bytes,2,opt,name=file_statistics,json=fileStatistics,proto3" json:"file_statistics,omitempty"`
}

func (x *DriveSupport) Reset() {
	*x = DriveSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriveSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriveSupport) ProtoMessage() {}

func (x *DriveSupport) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriveSupport.ProtoReflect.Descriptor instead.
func (*DriveSupport) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{1}
}

func (x *DriveSupport) GetProduct() *accounting.ProductReference {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *DriveSupport) GetDriveOperations() *DriveSupport_DriveOperations {
	if x != nil {
		return x.DriveOperations
	}
	return nil
}

func (x *DriveSupport) GetFileOperations() *DriveSupport_FileOperations {
	if x != nil {
		return x.FileOperations
	}
	return nil
}

func (x *DriveSupport) GetFileStatistics() *DriveSupport_FileStatistics {
	if x != nil {
		return x.FileStatistics
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drives []*Drive_Specification `protobuf:"bytes,1,rep,name=drives,proto3" json:"drives,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRequest) GetDrives() []*Drive_Specification {
	if x != nil {
		return x.Drives
	}
	return nil
}

type CreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CreateReply) Reset() {
	*x = CreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReply) ProtoMessage() {}

func (x *CreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReply.ProtoReflect.Descriptor instead.
func (*CreateReply) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{3}
}

func (x *CreateReply) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BrowseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemsPerPage int32                `protobuf:"varint,1,opt,name=items_per_page,json=itemsPerPage,proto3" json:"items_per_page,omitempty"`
	Next         string               `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
	Query        string               `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Flags        *resources.Flags     `protobuf:"bytes,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Types        []BrowseRequest_Type `protobuf:"varint,5,rep,packed,name=types,proto3,enum=drives.BrowseRequest_Type" json:"types,omitempty"`
}

func (x *BrowseRequest) Reset() {
	*x = BrowseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseRequest) ProtoMessage() {}

func (x *BrowseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseRequest.ProtoReflect.Descriptor instead.
func (*BrowseRequest) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{4}
}

func (x *BrowseRequest) GetItemsPerPage() int32 {
	if x != nil {
		return x.ItemsPerPage
	}
	return 0
}

func (x *BrowseRequest) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *BrowseRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *BrowseRequest) GetFlags() *resources.Flags {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *BrowseRequest) GetTypes() []BrowseRequest_Type {
	if x != nil {
		return x.Types
	}
	return nil
}

type BrowseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next     string                `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Items    []*Drive              `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Products []*accounting.Product `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	Support  []*DriveSupport       `protobuf:"bytes,4,rep,name=support,proto3" json:"support,omitempty"`
}

func (x *BrowseReply) Reset() {
	*x = BrowseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseReply) ProtoMessage() {}

func (x *BrowseReply) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseReply.ProtoReflect.Descriptor instead.
func (*BrowseReply) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{5}
}

func (x *BrowseReply) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *BrowseReply) GetItems() []*Drive {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BrowseReply) GetProducts() []*accounting.Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *BrowseReply) GetSupport() []*DriveSupport {
	if x != nil {
		return x.Support
	}
	return nil
}

type RenameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RenameRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RenameRequest) Reset() {
	*x = RenameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameRequest) ProtoMessage() {}

func (x *RenameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameRequest.ProtoReflect.Descriptor instead.
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{6}
}

func (x *RenameRequest) GetItems() []*RenameRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type RenameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RenameReply) Reset() {
	*x = RenameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameReply) ProtoMessage() {}

func (x *RenameReply) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameReply.ProtoReflect.Descriptor instead.
func (*RenameReply) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{7}
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DeleteRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRequest) GetItems() []*DeleteRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteReply) Reset() {
	*x = DeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReply) ProtoMessage() {}

func (x *DeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReply.ProtoReflect.Descriptor instead.
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{9}
}

type UpdateAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*UpdateAclRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UpdateAclRequest) Reset() {
	*x = UpdateAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAclRequest) ProtoMessage() {}

func (x *UpdateAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAclRequest.ProtoReflect.Descriptor instead.
func (*UpdateAclRequest) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAclRequest) GetItems() []*UpdateAclRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateAclReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAclReply) Reset() {
	*x = UpdateAclReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAclReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAclReply) ProtoMessage() {}

func (x *UpdateAclReply) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAclReply.ProtoReflect.Descriptor instead.
func (*UpdateAclReply) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{11}
}

type Drive_Specification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string                       `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Product *accounting.ProductReference `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *Drive_Specification) Reset() {
	*x = Drive_Specification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Drive_Specification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Drive_Specification) ProtoMessage() {}

func (x *Drive_Specification) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Drive_Specification.ProtoReflect.Descriptor instead.
func (*Drive_Specification) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Drive_Specification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Drive_Specification) GetProduct() *accounting.ProductReference {
	if x != nil {
		return x.Product
	}
	return nil
}

type Drive_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderGeneratedId string `protobuf:"bytes,1,opt,name=provider_generated_id,json=providerGeneratedId,proto3" json:"provider_generated_id,omitempty"`
}

func (x *Drive_Status) Reset() {
	*x = Drive_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Drive_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Drive_Status) ProtoMessage() {}

func (x *Drive_Status) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Drive_Status.ProtoReflect.Descriptor instead.
func (*Drive_Status) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Drive_Status) GetProviderGeneratedId() string {
	if x != nil {
		return x.ProviderGeneratedId
	}
	return ""
}

type DriveSupport_DriveOperations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AclModifiable  bool `protobuf:"varint,1,opt,name=acl_modifiable,json=aclModifiable,proto3" json:"acl_modifiable,omitempty"`
	UsersCanCreate bool `protobuf:"varint,2,opt,name=users_can_create,json=usersCanCreate,proto3" json:"users_can_create,omitempty"`
	UsersCanDelete bool `protobuf:"varint,3,opt,name=users_can_delete,json=usersCanDelete,proto3" json:"users_can_delete,omitempty"`
	UsersCanRename bool `protobuf:"varint,4,opt,name=users_can_rename,json=usersCanRename,proto3" json:"users_can_rename,omitempty"`
}

func (x *DriveSupport_DriveOperations) Reset() {
	*x = DriveSupport_DriveOperations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriveSupport_DriveOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriveSupport_DriveOperations) ProtoMessage() {}

func (x *DriveSupport_DriveOperations) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriveSupport_DriveOperations.ProtoReflect.Descriptor instead.
func (*DriveSupport_DriveOperations) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DriveSupport_DriveOperations) GetAclModifiable() bool {
	if x != nil {
		return x.AclModifiable
	}
	return false
}

func (x *DriveSupport_DriveOperations) GetUsersCanCreate() bool {
	if x != nil {
		return x.UsersCanCreate
	}
	return false
}

func (x *DriveSupport_DriveOperations) GetUsersCanDelete() bool {
	if x != nil {
		return x.UsersCanDelete
	}
	return false
}

func (x *DriveSupport_DriveOperations) GetUsersCanRename() bool {
	if x != nil {
		return x.UsersCanRename
	}
	return false
}

type DriveSupport_FileOperations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrashSupported           bool `protobuf:"varint,1,opt,name=trash_supported,json=trashSupported,proto3" json:"trash_supported,omitempty"`
	IsReadOnly               bool `protobuf:"varint,2,opt,name=is_read_only,json=isReadOnly,proto3" json:"is_read_only,omitempty"`
	SearchSupported          bool `protobuf:"varint,3,opt,name=search_supported,json=searchSupported,proto3" json:"search_supported,omitempty"`
	StreamingSearchSupported bool `protobuf:"varint,4,opt,name=streaming_search_supported,json=streamingSearchSupported,proto3" json:"streaming_search_supported,omitempty"`
	SharesSupported          bool `protobuf:"varint,5,opt,name=shares_supported,json=sharesSupported,proto3" json:"shares_supported,omitempty"`
}

func (x *DriveSupport_FileOperations) Reset() {
	*x = DriveSupport_FileOperations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriveSupport_FileOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriveSupport_FileOperations) ProtoMessage() {}

func (x *DriveSupport_FileOperations) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriveSupport_FileOperations.ProtoReflect.Descriptor instead.
func (*DriveSupport_FileOperations) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{1, 1}
}

func (x *DriveSupport_FileOperations) GetTrashSupported() bool {
	if x != nil {
		return x.TrashSupported
	}
	return false
}

func (x *DriveSupport_FileOperations) GetIsReadOnly() bool {
	if x != nil {
		return x.IsReadOnly
	}
	return false
}

func (x *DriveSupport_FileOperations) GetSearchSupported() bool {
	if x != nil {
		return x.SearchSupported
	}
	return false
}

func (x *DriveSupport_FileOperations) GetStreamingSearchSupported() bool {
	if x != nil {
		return x.StreamingSearchSupported
	}
	return false
}

func (x *DriveSupport_FileOperations) GetSharesSupported() bool {
	if x != nil {
		return x.SharesSupported
	}
	return false
}

type DriveSupport_FileStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size            bool `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	SizeRecursive   bool `protobuf:"varint,2,opt,name=size_recursive,json=sizeRecursive,proto3" json:"size_recursive,omitempty"`
	ModifiedAt      bool `protobuf:"varint,3,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	CreatedAt       bool `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AccessedAt      bool `protobuf:"varint,5,opt,name=accessed_at,json=accessedAt,proto3" json:"accessed_at,omitempty"`
	UnixPermissions bool `protobuf:"varint,6,opt,name=unix_permissions,json=unixPermissions,proto3" json:"unix_permissions,omitempty"`
	UnixOwner       bool `protobuf:"varint,7,opt,name=unix_owner,json=unixOwner,proto3" json:"unix_owner,omitempty"`
	UnixGroup       bool `protobuf:"varint,8,opt,name=unix_group,json=unixGroup,proto3" json:"unix_group,omitempty"`
}

func (x *DriveSupport_FileStatistics) Reset() {
	*x = DriveSupport_FileStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriveSupport_FileStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriveSupport_FileStatistics) ProtoMessage() {}

func (x *DriveSupport_FileStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriveSupport_FileStatistics.ProtoReflect.Descriptor instead.
func (*DriveSupport_FileStatistics) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{1, 2}
}

func (x *DriveSupport_FileStatistics) GetSize() bool {
	if x != nil {
		return x.Size
	}
	return false
}

func (x *DriveSupport_FileStatistics) GetSizeRecursive() bool {
	if x != nil {
		return x.SizeRecursive
	}
	return false
}

func (x *DriveSupport_FileStatistics) GetModifiedAt() bool {
	if x != nil {
		return x.ModifiedAt
	}
	return false
}

func (x *DriveSupport_FileStatistics) GetCreatedAt() bool {
	if x != nil {
		return x.CreatedAt
	}
	return false
}

func (x *DriveSupport_FileStatistics) GetAccessedAt() bool {
	if x != nil {
		return x.AccessedAt
	}
	return false
}

func (x *DriveSupport_FileStatistics) GetUnixPermissions() bool {
	if x != nil {
		return x.UnixPermissions
	}
	return false
}

func (x *DriveSupport_FileStatistics) GetUnixOwner() bool {
	if x != nil {
		return x.UnixOwner
	}
	return false
}

func (x *DriveSupport_FileStatistics) GetUnixGroup() bool {
	if x != nil {
		return x.UnixGroup
	}
	return false
}

type RenameRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriveId  int64  `protobuf:"varint,1,opt,name=drive_id,json=driveId,proto3" json:"drive_id,omitempty"`
	NewTitle string `protobuf:"bytes,2,opt,name=new_title,json=newTitle,proto3" json:"new_title,omitempty"`
}

func (x *RenameRequest_Item) Reset() {
	*x = RenameRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameRequest_Item) ProtoMessage() {}

func (x *RenameRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameRequest_Item.ProtoReflect.Descriptor instead.
func (*RenameRequest_Item) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{6, 0}
}

func (x *RenameRequest_Item) GetDriveId() int64 {
	if x != nil {
		return x.DriveId
	}
	return 0
}

func (x *RenameRequest_Item) GetNewTitle() string {
	if x != nil {
		return x.NewTitle
	}
	return ""
}

type DeleteRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriveId int64 `protobuf:"varint,1,opt,name=drive_id,json=driveId,proto3" json:"drive_id,omitempty"`
}

func (x *DeleteRequest_Item) Reset() {
	*x = DeleteRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest_Item) ProtoMessage() {}

func (x *DeleteRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest_Item.ProtoReflect.Descriptor instead.
func (*DeleteRequest_Item) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{8, 0}
}

func (x *DeleteRequest_Item) GetDriveId() int64 {
	if x != nil {
		return x.DriveId
	}
	return 0
}

type UpdateAclRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriveId int64                 `protobuf:"varint,1,opt,name=drive_id,json=driveId,proto3" json:"drive_id,omitempty"`
	Acl     *resources.UpdatedAcl `protobuf:"bytes,2,opt,name=acl,proto3" json:"acl,omitempty"`
}

func (x *UpdateAclRequest_Item) Reset() {
	*x = UpdateAclRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drives_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAclRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAclRequest_Item) ProtoMessage() {}

func (x *UpdateAclRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_drives_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAclRequest_Item.ProtoReflect.Descriptor instead.
func (*UpdateAclRequest_Item) Descriptor() ([]byte, []int) {
	return file_drives_proto_rawDescGZIP(), []int{10, 0}
}

func (x *UpdateAclRequest_Item) GetDriveId() int64 {
	if x != nil {
		return x.DriveId
	}
	return 0
}

func (x *UpdateAclRequest_Item) GetAcl() *resources.UpdatedAcl {
	if x != nil {
		return x.Acl
	}
	return nil
}

var File_drives_proto protoreflect.FileDescriptor

var file_drives_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x1a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x02, 0x0a, 0x05, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x73, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73,
	0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x5d, 0x0a, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x1a, 0x3c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32,
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x49, 0x64, 0x22, 0xf6, 0x07, 0x0a, 0x0c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x0f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0xb6, 0x01, 0x0a, 0x0f, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x63, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x63, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x61, 0x6e,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x43, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x43, 0x61,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x1a, 0xef, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x73, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12,
	0x29, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x1a, 0x95, 0x02, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69,
	0x7a, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x75, 0x6e,
	0x69, 0x78, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x78, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x6e, 0x69, 0x78, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x75, 0x6e, 0x69, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x44, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x73, 0x22, 0x1f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x0d, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x44,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x46, 0x49, 0x4c, 0x45,
	0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x10, 0x02, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73,
	0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2f, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x2e,
	0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x81,
	0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0x3e, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x64, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x21, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x49, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x1a, 0x4a, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x63, 0x6c, 0x52, 0x03, 0x61, 0x63, 0x6c, 0x22, 0x10, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xef,
	0x01, 0x0a, 0x0c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x34, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x15, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x12, 0x15, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x3d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x12, 0x18,
	0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x42, 0x35, 0x0a, 0x13, 0x64, 0x6b, 0x2e, 0x73, 0x64, 0x75, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x5a, 0x1e, 0x75, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x64, 0x6b, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_drives_proto_rawDescOnce sync.Once
	file_drives_proto_rawDescData = file_drives_proto_rawDesc
)

func file_drives_proto_rawDescGZIP() []byte {
	file_drives_proto_rawDescOnce.Do(func() {
		file_drives_proto_rawDescData = protoimpl.X.CompressGZIP(file_drives_proto_rawDescData)
	})
	return file_drives_proto_rawDescData
}

var file_drives_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_drives_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_drives_proto_goTypes = []interface{}{
	(BrowseRequest_Type)(0),              // 0: drives.BrowseRequest.Type
	(*Drive)(nil),                        // 1: drives.Drive
	(*DriveSupport)(nil),                 // 2: drives.DriveSupport
	(*CreateRequest)(nil),                // 3: drives.CreateRequest
	(*CreateReply)(nil),                  // 4: drives.CreateReply
	(*BrowseRequest)(nil),                // 5: drives.BrowseRequest
	(*BrowseReply)(nil),                  // 6: drives.BrowseReply
	(*RenameRequest)(nil),                // 7: drives.RenameRequest
	(*RenameReply)(nil),                  // 8: drives.RenameReply
	(*DeleteRequest)(nil),                // 9: drives.DeleteRequest
	(*DeleteReply)(nil),                  // 10: drives.DeleteReply
	(*UpdateAclRequest)(nil),             // 11: drives.UpdateAclRequest
	(*UpdateAclReply)(nil),               // 12: drives.UpdateAclReply
	(*Drive_Specification)(nil),          // 13: drives.Drive.Specification
	(*Drive_Status)(nil),                 // 14: drives.Drive.Status
	(*DriveSupport_DriveOperations)(nil), // 15: drives.DriveSupport.DriveOperations
	(*DriveSupport_FileOperations)(nil),  // 16: drives.DriveSupport.FileOperations
	(*DriveSupport_FileStatistics)(nil),  // 17: drives.DriveSupport.FileStatistics
	(*RenameRequest_Item)(nil),           // 18: drives.RenameRequest.Item
	(*DeleteRequest_Item)(nil),           // 19: drives.DeleteRequest.Item
	(*UpdateAclRequest_Item)(nil),        // 20: drives.UpdateAclRequest.Item
	(*resources.Metadata)(nil),           // 21: resources.Metadata
	(*accounting.ProductReference)(nil),  // 22: accounting.ProductReference
	(*resources.Flags)(nil),              // 23: resources.Flags
	(*accounting.Product)(nil),           // 24: accounting.Product
	(*resources.UpdatedAcl)(nil),         // 25: resources.UpdatedAcl
}
var file_drives_proto_depIdxs = []int32{
	21, // 0: drives.Drive.metadata:type_name -> resources.Metadata
	13, // 1: drives.Drive.specification:type_name -> drives.Drive.Specification
	14, // 2: drives.Drive.status:type_name -> drives.Drive.Status
	22, // 3: drives.DriveSupport.product:type_name -> accounting.ProductReference
	15, // 4: drives.DriveSupport.drive_operations:type_name -> drives.DriveSupport.DriveOperations
	16, // 5: drives.DriveSupport.file_operations:type_name -> drives.DriveSupport.FileOperations
	17, // 6: drives.DriveSupport.file_statistics:type_name -> drives.DriveSupport.FileStatistics
	13, // 7: drives.CreateRequest.drives:type_name -> drives.Drive.Specification
	23, // 8: drives.BrowseRequest.flags:type_name -> resources.Flags
	0,  // 9: drives.BrowseRequest.types:type_name -> drives.BrowseRequest.Type
	1,  // 10: drives.BrowseReply.items:type_name -> drives.Drive
	24, // 11: drives.BrowseReply.products:type_name -> accounting.Product
	2,  // 12: drives.BrowseReply.support:type_name -> drives.DriveSupport
	18, // 13: drives.RenameRequest.items:type_name -> drives.RenameRequest.Item
	19, // 14: drives.DeleteRequest.items:type_name -> drives.DeleteRequest.Item
	20, // 15: drives.UpdateAclRequest.items:type_name -> drives.UpdateAclRequest.Item
	22, // 16: drives.Drive.Specification.product:type_name -> accounting.ProductReference
	25, // 17: drives.UpdateAclRequest.Item.acl:type_name -> resources.UpdatedAcl
	3,  // 18: drives.DriveService.Create:input_type -> drives.CreateRequest
	9,  // 19: drives.DriveService.Delete:input_type -> drives.DeleteRequest
	5,  // 20: drives.DriveService.Browse:input_type -> drives.BrowseRequest
	11, // 21: drives.DriveService.UpdateAcl:input_type -> drives.UpdateAclRequest
	4,  // 22: drives.DriveService.Create:output_type -> drives.CreateReply
	10, // 23: drives.DriveService.Delete:output_type -> drives.DeleteReply
	6,  // 24: drives.DriveService.Browse:output_type -> drives.BrowseReply
	12, // 25: drives.DriveService.UpdateAcl:output_type -> drives.UpdateAclReply
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_drives_proto_init() }
func file_drives_proto_init() {
	if File_drives_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_drives_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Drive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriveSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAclReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Drive_Specification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Drive_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriveSupport_DriveOperations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriveSupport_FileOperations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriveSupport_FileStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drives_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAclRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_drives_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_drives_proto_goTypes,
		DependencyIndexes: file_drives_proto_depIdxs,
		EnumInfos:         file_drives_proto_enumTypes,
		MessageInfos:      file_drives_proto_msgTypes,
	}.Build()
	File_drives_proto = out.File
	file_drives_proto_rawDesc = nil
	file_drives_proto_goTypes = nil
	file_drives_proto_depIdxs = nil
}
