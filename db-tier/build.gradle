group 'sducloud'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.0'
    ext.ktor_version = '0.4.0'
    ext.dokka_version = '0.9.15'
    ext.log4j_version = '2.10.0'
    ext.exposed_version = '0.9.1'
    ext.logback_version = '1.2.3'
    ext.postgresql_version = '42.1.4'
    ext.slf4j_version = '1.7.25'
    ext.jvm_target = '1.8'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = "$jvm_target"


dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

dependencies {
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-api', version:"$log4j_version"
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version:"$log4j_version"
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version:"$log4j_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.exposed:exposed:$exposed_version"
    compile "org.jetbrains.ktor:ktor-core:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "org.jetbrains.ktor:ktor-gson:$ktor_version"
    compile "org.jetbrains.ktor:ktor-netty:$ktor_version"
    compile group: 'org.postgresql', name: 'postgresql', version:"$postgresql_version"
    compile group: 'org.slf4j', name: 'slf4j-api', version:"$slf4j_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "$jvm_target"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "$jvm_target"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}