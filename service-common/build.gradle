group 'org.esciencecloud'
version '0.4.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.0'
    ext.ktor_version = '0.9.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven-publish'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.1.51'

    // Kafka
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '1.0.0'
    compile group: 'org.apache.kafka', name: 'kafka-streams', version: '1.0.0'

    // Logging
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.1'

    // Serialization
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"

    compile "org.esciencecloud.client:core:0.1.0-SNAPSHOT"

    // ktor
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.20'

    compile group: 'io.ktor', name: 'ktor-server-core', version: "$ktor_version"
    compile group: 'io.ktor', name: 'ktor-server-cio', version: "$ktor_version"
    compile group: 'io.ktor', name: 'ktor-jackson', version: "$ktor_version"

    // Testing
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }

    // For this to work you should create a file at ~/.gradle/gradle.properties
    // This file should contain the configuration for the repository, user, and password.
    //
    // Example:
    // eScienceCloudRepository=http://localhost:18080/repository/internal
    // eScienceCloudUser=admin
    // eScienceCloudPassword=qwer
    //
    repositories {
        maven {
            url(eScienceCloudRepository)
            credentials {
                username(eScienceCloudUser)
                password(eScienceCloudPassword)
            }
        }
    }
}

