group 'org.esciencecloud'
version '0.1.0'

buildscript {
    ext.kotlin_version = '1.2.10'
    ext.ktor_version = '0.9.1-alpha-8'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
sourceCompatibility = 1.8
mainClassName = "org.esciencecloud.abc.ApplicationStreamProcessorKt"

repositories {
    mavenCentral()

    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }

    maven {
        url("https://cloud.sdu.dk/archiva/repository/snapshots")
        credentials {
            username(eScienceCloudUser)
            password(eScienceCloudPassword)
        }
    }

    maven {
        url("https://cloud.sdu.dk/archiva/repository/internal")
        credentials {
            username(eScienceCloudUser)
            password(eScienceCloudPassword)
        }
    }

    // Repositories required for iRODS to work
    maven { url "https://raw.github.com/DICE-UNC/DICE-Maven/master/releases" }
    maven { url "http://ci-dev.renci.org/nexus/content/repositories/public" }
    maven { url "http://download.osgeo.org/webdav/geotools" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // ------------
    // iRODS
    // ------------
    compile "dk.sdu.cloud:cloud-storage:0.5.0-SNAPSHOT"

    // ------------
    // Logging
    // ------------
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.9.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.9.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.1'

    // ------------
    // ktor
    // ------------
    compile group: 'io.ktor', name: 'ktor-server-cio', version: "$ktor_version"
    compile group: 'io.ktor', name: 'ktor-jackson', version: "$ktor_version"

    // ------------
    // SSH/SCP
    // ------------
    compile group: 'com.jcraft', name: 'jsch', version: '0.1.54'

    // ------------
    // sbatch
    // ------------
    compile 'com.google.guava:guava:23.4-jre'

    compile 'dk.sdu.cloud:client-core:0.1.0-SNAPSHOT'
    compile 'dk.sdu.cloud:service-common:0.5.0-SNAPSHOT'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task fatJar(type: Jar) {
    manifest {
        attributes(['Implementation-Title'  : 'Storage FatJar',
                    'Implementation-Version': version,
                    'Main-Class'            : 'org.esciencecloud.abc.FileTransfersKt'])
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task apiJar(type: Jar) {
    baseName project.name + '-api'
    from sourceSets.main.output
    include("**/org/esciencecloud/abc/api/**", "service_manifest.json")
    with jar
}
