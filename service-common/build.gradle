group "dk.sdu.cloud"
version "0.8.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.2.40"
    ext.ktor_version = "0.9.1"

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "kotlin"
apply plugin: "maven-publish"

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }

    maven {
        url("https://cloud.sdu.dk/archiva/repository/internal")
        credentials {
            username(eScienceCloudUser)
            password(eScienceCloudPassword)
        }
    }
    maven {
        url("https://cloud.sdu.dk/archiva/repository/snapshots")
        credentials {
            username(eScienceCloudUser)
            password(eScienceCloudPassword)
        }
    }
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Kafka
    compile group: "org.apache.kafka", name: "kafka-clients", version: "1.0.0"
    compile group: "org.apache.kafka", name: "kafka-streams", version: "1.0.0"

    // Serialization
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.4.1"

    // Client dependencies (needed to export definitions to clients)
    compile "dk.sdu.cloud:client-core:0.1.0-SNAPSHOT"

    // ktor
    compile group: "io.ktor", name: "ktor-server-core", version: "$ktor_version"
    compile group: "io.ktor", name: "ktor-jackson", version: "$ktor_version"
    compile group: "io.ktor", name: "ktor-server-host-common", version: "$ktor_version"

    // Service discovery
    compile 'com.orbitz.consul:consul-client:1.1.0'
    compile group: "com.github.zafarkhaja", name: "java-semver", version: "0.9.0"

    // JWTs
    compile "com.auth0:java-jwt:3.3.0"

    // Testing
    testCompile group: "junit", name: "junit", version: "4.12"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }

    // For this to work you should create a file at ~/.gradle/gradle.properties
    // This file should contain the configuration for the repository, user, and password.
    //
    // Example:
    // eScienceCloudUser=admin
    // eScienceCloudPassword=qwer
    //
    repositories {
        maven {
            def resolvedUrl = "https://cloud.sdu.dk/archiva/repository/"
            if (project.version.endsWith("-SNAPSHOT")) resolvedUrl += "snapshots"
            else resolvedUrl += "internal"
            url(resolvedUrl)

            credentials {
                username(eScienceCloudUser)
                password(eScienceCloudPassword)
            }
        }
    }
}

