group 'dk.sdu.cloud'
version '1.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: "maven-publish"
apply plugin: "application"

mainClassName = "dk.sdu.cloud.TempHandlers.InitUiMock"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}



dependencies {
    compile group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.1.0'
    compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa', version: '2.5.0'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.1'
    compile group: 'com.fasterxml', name: 'jackson-module-json-org', version: '0.9.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    testCompile 'io.cucumber:cucumber-java8:2.3.1'
    testCompile 'io.cucumber:cucumber-junit:2.4.0'
    testCompile 'junit:junit:4.12'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}


configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}


task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }

    // For this to work you should create a file at ~/.gradle/gradle.properties
    // This file should contain the configuration for the repository, user, and password.
    //
    // Example:
    // eScienceCloudUser=admin
    // eScienceCloudPassword=qwer
    //
    repositories {
        maven {
            def resolvedUrl = "https://cloud.sdu.dk/archiva/repository/"
            if (project.version.endsWith("-SNAPSHOT")) resolvedUrl += "snapshots"
            else resolvedUrl += "internal"
            url(resolvedUrl)

            credentials {
                username(eScienceCloudUser)
                password(eScienceCloudPassword)
            }
        }
    }
}
