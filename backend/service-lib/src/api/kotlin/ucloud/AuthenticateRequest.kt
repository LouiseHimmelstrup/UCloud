// automatically generated by the FlatBuffers compiler, do not modify

package ucloud

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

@Suppress("unused")
@kotlin.ExperimentalUnsignedTypes
class AuthenticateRequest : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : AuthenticateRequest {
        __init(_i, _bb)
        return this
    }
    val bearer : String
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                throw AssertionError("No value for (required) field bearer")
            }
        }
    val bearerAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun bearerInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_23_3_3()
        fun getRootAsAuthenticateRequest(_bb: ByteBuffer): AuthenticateRequest = getRootAsAuthenticateRequest(_bb, AuthenticateRequest())
        fun getRootAsAuthenticateRequest(_bb: ByteBuffer, obj: AuthenticateRequest): AuthenticateRequest {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createAuthenticateRequest(builder: FlatBufferBuilder, bearerOffset: Int) : Int {
            builder.startTable(1)
            addBearer(builder, bearerOffset)
            return endAuthenticateRequest(builder)
        }
        fun startAuthenticateRequest(builder: FlatBufferBuilder) = builder.startTable(1)
        fun addBearer(builder: FlatBufferBuilder, bearer: Int) = builder.addOffset(0, bearer, 0)
        fun endAuthenticateRequest(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
                builder.required(o, 4)
            return o
        }
    }
}
