#!/usr/bin/env bash

if (( $# != 1 )); then
    echo "Usage: $0 <serviceName>"
    exit 1
fi

if !(hash handlebars 2>/dev/null) || !(hash python 2>/dev/null); then
    echo "This script requires npm, node and handlebars"
    echo "The following should get you started"
    echo "  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash"
    echo "  nvm install --lts"
    echo "  npm install -g handlebars-cmd"
    exit 1
fi

function relpath() {
    python -c "import os,sys;print(os.path.relpath(*(sys.argv[1:])))" "$@";
}

function titlecase() {
    python -c "import os, sys; print(sys.argv[1].title())" "$@";
}

serviceName=$1
jsonModel='{
    "serviceName": "'${serviceName}'",
    "serviceNameTitle": "'$(titlecase $serviceName)'",
    "serviceCommonVersion": "0.22.0-SNAPSHOT",
    "authApiVersion": "1.8.0-SNAPSHOT"
}'
jsonModelFile=/tmp/create-new-service.json

echo $jsonModel > $jsonModelFile
echo "Creating new service ${serviceName}"

if [ -d $serviceName-service ]; then
    echo "Directory ${serviceName}-service already exists"
    exit 1
fi

IFS=$'\n'; set -f
for file in $(find ./service-template); do
    targetPath=$serviceName-service/$(relpath $file ./service-template)
    echo $targetPath

    if [ ${file: -4} != ".jar" ] && [ ${file: -9} != ".DS_Store" ]; then
        if [ -d "${file}" ]; then
            mkdir -p $targetPath
        else
            handlebars $jsonModelFile < $file > $targetPath
        fi
    else
        cp $file $targetPath
    fi
done
unset IFS; set +f

mv $serviceName-service/src/main/kotlin/dk/sdu/cloud/service \
    $serviceName-service/src/main/kotlin/dk/sdu/cloud/$serviceName

chmod +x $serviceName-service/gradlew
chmod +x $serviceName-service/build_production
chmod +x $serviceName-service/*cache
