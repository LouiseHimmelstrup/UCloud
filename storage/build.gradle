buildscript {
    ext.kotlin_version = '1.1.51'
    ext.ktor_version = '0.9.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'org.esciencecloud'
version '0.1.3'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()

    maven { url "https://dl.bintray.com/kotlin/exposed" }

    // TODO Something is not being imported correctly from the DICE repo
    maven { url "https://raw.github.com/DICE-UNC/DICE-Maven/master/releases" }
    // Had to get these last two from the Maven output where it doesn't need them
    // mvn dependency:resolve gave us the correct locations
    maven { url "http://ci-dev.renci.org/nexus/content/repositories/public" }
    maven { url "http://download.osgeo.org/webdav/geotools" }

    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url(eScienceCloudRepository) }
    maven { url "https://dl.bintray.com/tus/maven" }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    // ------------
    // Ceph uploads
    // ------------
    compile files("libs/rados-0.4.0-SNAPSHOT.jar")
    compile 'io.tus.java.client:tus-java-client:0.3.1'
    // ------------

    compile 'org.jetbrains.exposed:exposed:0.8.6'
    compile group: 'org.irods.jargon', name: 'jargon-core', version: '4.2.0.0-RELEASE'

    // Logging
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.7'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.9.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.9.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.1'

    // ktor
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.1'

    compile group: 'io.ktor', name: 'ktor-server-core', version: "$ktor_version"
    compile group: 'io.ktor', name: 'ktor-server-cio', version: "$ktor_version"


    compile "org.esciencecloud:kafka-common:0.3.0"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

task apiJar(type: Jar) {
    baseName "publishing-api"
    from sourceSets.main.output
    include "org/esciencecloud/storage/model/**"
}

publishing {
    publications {
        api(MavenPublication) {
            groupId 'org.esciencecloud'
            artifactId 'storage-api'
            artifact apiJar
        }
    }

    repositories {
        maven {
            url(eScienceCloudRepository)
            credentials {
                username(eScienceCloudUser)
                password(eScienceCloudPassword)
            }
        }
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes(['Implementation-Title'  : 'Storage FatJar',
                    'Implementation-Version': version,
                    'Main-Class'            : 'org.esciencecloud.storage.processor.ServerKt'])
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
