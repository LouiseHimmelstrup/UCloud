// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: files.proto

package files

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	accounting "ucloud.dk/apm/accounting"
	drives "ucloud.dk/orchestrators/drives"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WriteConflictPolicy int32

const (
	WriteConflictPolicy_WRITE_CONFLICT_POLICY_UNSPECIFIED  WriteConflictPolicy = 0
	WriteConflictPolicy_WRITE_CONFLICT_POLICY_RENAME       WriteConflictPolicy = 1
	WriteConflictPolicy_WRITE_CONFLICT_POLICY_REJECT       WriteConflictPolicy = 2
	WriteConflictPolicy_WRITE_CONFLICT_POLICY_REPLACE      WriteConflictPolicy = 3
	WriteConflictPolicy_WRITE_CONFLICT_POLICY_MERGE_RENAME WriteConflictPolicy = 4
)

// Enum value maps for WriteConflictPolicy.
var (
	WriteConflictPolicy_name = map[int32]string{
		0: "WRITE_CONFLICT_POLICY_UNSPECIFIED",
		1: "WRITE_CONFLICT_POLICY_RENAME",
		2: "WRITE_CONFLICT_POLICY_REJECT",
		3: "WRITE_CONFLICT_POLICY_REPLACE",
		4: "WRITE_CONFLICT_POLICY_MERGE_RENAME",
	}
	WriteConflictPolicy_value = map[string]int32{
		"WRITE_CONFLICT_POLICY_UNSPECIFIED":  0,
		"WRITE_CONFLICT_POLICY_RENAME":       1,
		"WRITE_CONFLICT_POLICY_REJECT":       2,
		"WRITE_CONFLICT_POLICY_REPLACE":      3,
		"WRITE_CONFLICT_POLICY_MERGE_RENAME": 4,
	}
)

func (x WriteConflictPolicy) Enum() *WriteConflictPolicy {
	p := new(WriteConflictPolicy)
	*p = x
	return p
}

func (x WriteConflictPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WriteConflictPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_files_proto_enumTypes[0].Descriptor()
}

func (WriteConflictPolicy) Type() protoreflect.EnumType {
	return &file_files_proto_enumTypes[0]
}

func (x WriteConflictPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WriteConflictPolicy.Descriptor instead.
func (WriteConflictPolicy) EnumDescriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{0}
}

type FileType int32

const (
	FileType_FILE_TYPE_UNSPECIFIED FileType = 0
	FileType_FILE_TYPE_FILE        FileType = 1
	FileType_FILE_TYPE_DIRECTORY   FileType = 2
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "FILE_TYPE_UNSPECIFIED",
		1: "FILE_TYPE_FILE",
		2: "FILE_TYPE_DIRECTORY",
	}
	FileType_value = map[string]int32{
		"FILE_TYPE_UNSPECIFIED": 0,
		"FILE_TYPE_FILE":        1,
		"FILE_TYPE_DIRECTORY":   2,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_files_proto_enumTypes[1].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_files_proto_enumTypes[1]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{1}
}

type FileIconHint int32

const (
	FileIconHint_FILE_ICON_HINT_UNSPECIFIED FileIconHint = 0
	FileIconHint_FILE_ICON_HINT_TRASH       FileIconHint = 1
	FileIconHint_FILE_ICON_HINT_STAR        FileIconHint = 2
	FileIconHint_FILE_ICON_HINT_SHARES      FileIconHint = 3
	FileIconHint_FILE_ICON_HINT_JOBS        FileIconHint = 4
)

// Enum value maps for FileIconHint.
var (
	FileIconHint_name = map[int32]string{
		0: "FILE_ICON_HINT_UNSPECIFIED",
		1: "FILE_ICON_HINT_TRASH",
		2: "FILE_ICON_HINT_STAR",
		3: "FILE_ICON_HINT_SHARES",
		4: "FILE_ICON_HINT_JOBS",
	}
	FileIconHint_value = map[string]int32{
		"FILE_ICON_HINT_UNSPECIFIED": 0,
		"FILE_ICON_HINT_TRASH":       1,
		"FILE_ICON_HINT_STAR":        2,
		"FILE_ICON_HINT_SHARES":      3,
		"FILE_ICON_HINT_JOBS":        4,
	}
)

func (x FileIconHint) Enum() *FileIconHint {
	p := new(FileIconHint)
	*p = x
	return p
}

func (x FileIconHint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileIconHint) Descriptor() protoreflect.EnumDescriptor {
	return file_files_proto_enumTypes[2].Descriptor()
}

func (FileIconHint) Type() protoreflect.EnumType {
	return &file_files_proto_enumTypes[2]
}

func (x FileIconHint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileIconHint.Descriptor instead.
func (FileIconHint) EnumDescriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2}
}

type GenericFileOperationReply_Type int32

const (
	GenericFileOperationReply_TYPE_UNSPECIFIED GenericFileOperationReply_Type = 0
	GenericFileOperationReply_TYPE_COMPLETE    GenericFileOperationReply_Type = 1
	GenericFileOperationReply_TYPE_ACCEPTED    GenericFileOperationReply_Type = 2
	GenericFileOperationReply_TYPE_FAILED      GenericFileOperationReply_Type = 3
)

// Enum value maps for GenericFileOperationReply_Type.
var (
	GenericFileOperationReply_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_COMPLETE",
		2: "TYPE_ACCEPTED",
		3: "TYPE_FAILED",
	}
	GenericFileOperationReply_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_COMPLETE":    1,
		"TYPE_ACCEPTED":    2,
		"TYPE_FAILED":      3,
	}
)

func (x GenericFileOperationReply_Type) Enum() *GenericFileOperationReply_Type {
	p := new(GenericFileOperationReply_Type)
	*p = x
	return p
}

func (x GenericFileOperationReply_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenericFileOperationReply_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_files_proto_enumTypes[3].Descriptor()
}

func (GenericFileOperationReply_Type) Type() protoreflect.EnumType {
	return &file_files_proto_enumTypes[3]
}

func (x GenericFileOperationReply_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenericFileOperationReply_Type.Descriptor instead.
func (GenericFileOperationReply_Type) EnumDescriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{0, 0}
}

type CreateUploadRequest_Protocol int32

const (
	CreateUploadRequest_PROTOCOL_UNSPECIFIED CreateUploadRequest_Protocol = 0
	CreateUploadRequest_PROTOCOL_CHUNKED     CreateUploadRequest_Protocol = 1
)

// Enum value maps for CreateUploadRequest_Protocol.
var (
	CreateUploadRequest_Protocol_name = map[int32]string{
		0: "PROTOCOL_UNSPECIFIED",
		1: "PROTOCOL_CHUNKED",
	}
	CreateUploadRequest_Protocol_value = map[string]int32{
		"PROTOCOL_UNSPECIFIED": 0,
		"PROTOCOL_CHUNKED":     1,
	}
)

func (x CreateUploadRequest_Protocol) Enum() *CreateUploadRequest_Protocol {
	p := new(CreateUploadRequest_Protocol)
	*p = x
	return p
}

func (x CreateUploadRequest_Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateUploadRequest_Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_files_proto_enumTypes[4].Descriptor()
}

func (CreateUploadRequest_Protocol) Type() protoreflect.EnumType {
	return &file_files_proto_enumTypes[4]
}

func (x CreateUploadRequest_Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateUploadRequest_Protocol.Descriptor instead.
func (CreateUploadRequest_Protocol) EnumDescriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{12, 0}
}

type GenericFileOperationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GenericFileOperationReply_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GenericFileOperationReply) Reset() {
	*x = GenericFileOperationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericFileOperationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericFileOperationReply) ProtoMessage() {}

func (x *GenericFileOperationReply) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericFileOperationReply.ProtoReflect.Descriptor instead.
func (*GenericFileOperationReply) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{0}
}

func (x *GenericFileOperationReply) GetItems() []*GenericFileOperationReply_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type UFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *UFile_Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status   *UFile_Status   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UFile) Reset() {
	*x = UFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UFile) ProtoMessage() {}

func (x *UFile) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UFile.ProtoReflect.Descriptor instead.
func (*UFile) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{1}
}

func (x *UFile) GetMetadata() *UFile_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UFile) GetStatus() *UFile_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type MetadataDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata      *MetadataDocument_Metadata      `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Specification *MetadataDocument_Specification `protobuf:"bytes,2,opt,name=specification,proto3" json:"specification,omitempty"`
	Status        *MetadataDocument_Status        `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MetadataDocument) Reset() {
	*x = MetadataDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataDocument) ProtoMessage() {}

func (x *MetadataDocument) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataDocument.ProtoReflect.Descriptor instead.
func (*MetadataDocument) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2}
}

func (x *MetadataDocument) GetMetadata() *MetadataDocument_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MetadataDocument) GetSpecification() *MetadataDocument_Specification {
	if x != nil {
		return x.Specification
	}
	return nil
}

func (x *MetadataDocument) GetStatus() *MetadataDocument_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type BrowseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemsPerPage int32                `protobuf:"varint,1,opt,name=items_per_page,json=itemsPerPage,proto3" json:"items_per_page,omitempty"`
	Next         string               `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
	Flags        *BrowseRequest_Flags `protobuf:"bytes,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *BrowseRequest) Reset() {
	*x = BrowseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseRequest) ProtoMessage() {}

func (x *BrowseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseRequest.ProtoReflect.Descriptor instead.
func (*BrowseRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{3}
}

func (x *BrowseRequest) GetItemsPerPage() int32 {
	if x != nil {
		return x.ItemsPerPage
	}
	return 0
}

func (x *BrowseRequest) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *BrowseRequest) GetFlags() *BrowseRequest_Flags {
	if x != nil {
		return x.Flags
	}
	return nil
}

type BrowseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next     string                 `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Items    []*UFile               `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Products []*accounting.Product  `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	Support  []*drives.DriveSupport `protobuf:"bytes,4,rep,name=support,proto3" json:"support,omitempty"`
}

func (x *BrowseReply) Reset() {
	*x = BrowseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseReply) ProtoMessage() {}

func (x *BrowseReply) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseReply.ProtoReflect.Descriptor instead.
func (*BrowseReply) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4}
}

func (x *BrowseReply) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *BrowseReply) GetItems() []*UFile {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BrowseReply) GetProducts() []*accounting.Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *BrowseReply) GetSupport() []*drives.DriveSupport {
	if x != nil {
		return x.Support
	}
	return nil
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemsPerPage int32                `protobuf:"varint,1,opt,name=items_per_page,json=itemsPerPage,proto3" json:"items_per_page,omitempty"`
	Next         string               `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
	Flags        *BrowseRequest_Flags `protobuf:"bytes,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Query        string               `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	SearchRoot   string               `protobuf:"bytes,5,opt,name=search_root,json=searchRoot,proto3" json:"search_root,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5}
}

func (x *SearchRequest) GetItemsPerPage() int32 {
	if x != nil {
		return x.ItemsPerPage
	}
	return 0
}

func (x *SearchRequest) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *SearchRequest) GetFlags() *BrowseRequest_Flags {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetSearchRoot() string {
	if x != nil {
		return x.SearchRoot
	}
	return ""
}

type SearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next     string                 `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Items    []*UFile               `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Products []*accounting.Product  `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	Support  []*drives.DriveSupport `protobuf:"bytes,4,rep,name=support,proto3" json:"support,omitempty"`
}

func (x *SearchReply) Reset() {
	*x = SearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReply) ProtoMessage() {}

func (x *SearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReply.ProtoReflect.Descriptor instead.
func (*SearchReply) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{6}
}

func (x *SearchReply) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *SearchReply) GetItems() []*UFile {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchReply) GetProducts() []*accounting.Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *SearchReply) GetSupport() []*drives.DriveSupport {
	if x != nil {
		return x.Support
	}
	return nil
}

type StreamingSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemsPerPage int32                `protobuf:"varint,1,opt,name=items_per_page,json=itemsPerPage,proto3" json:"items_per_page,omitempty"`
	Next         string               `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
	Flags        *BrowseRequest_Flags `protobuf:"bytes,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Query        string               `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	SearchRoot   string               `protobuf:"bytes,5,opt,name=search_root,json=searchRoot,proto3" json:"search_root,omitempty"`
}

func (x *StreamingSearchRequest) Reset() {
	*x = StreamingSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingSearchRequest) ProtoMessage() {}

func (x *StreamingSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingSearchRequest.ProtoReflect.Descriptor instead.
func (*StreamingSearchRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{7}
}

func (x *StreamingSearchRequest) GetItemsPerPage() int32 {
	if x != nil {
		return x.ItemsPerPage
	}
	return 0
}

func (x *StreamingSearchRequest) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *StreamingSearchRequest) GetFlags() *BrowseRequest_Flags {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *StreamingSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *StreamingSearchRequest) GetSearchRoot() string {
	if x != nil {
		return x.SearchRoot
	}
	return ""
}

type StreamingSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next     string                 `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Items    []*UFile               `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Products []*accounting.Product  `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	Support  []*drives.DriveSupport `protobuf:"bytes,4,rep,name=support,proto3" json:"support,omitempty"`
}

func (x *StreamingSearchReply) Reset() {
	*x = StreamingSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingSearchReply) ProtoMessage() {}

func (x *StreamingSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingSearchReply.ProtoReflect.Descriptor instead.
func (*StreamingSearchReply) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{8}
}

func (x *StreamingSearchReply) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *StreamingSearchReply) GetItems() []*UFile {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StreamingSearchReply) GetProducts() []*accounting.Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *StreamingSearchReply) GetSupport() []*drives.DriveSupport {
	if x != nil {
		return x.Support
	}
	return nil
}

type MoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MoveRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MoveRequest) Reset() {
	*x = MoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRequest) ProtoMessage() {}

func (x *MoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRequest.ProtoReflect.Descriptor instead.
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{9}
}

func (x *MoveRequest) GetItems() []*MoveRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CopyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CopyRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CopyRequest) Reset() {
	*x = CopyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyRequest) ProtoMessage() {}

func (x *CopyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyRequest.ProtoReflect.Descriptor instead.
func (*CopyRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{10}
}

func (x *CopyRequest) GetItems() []*CopyRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CreateFolderRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CreateFolderRequest) Reset() {
	*x = CreateFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderRequest) ProtoMessage() {}

func (x *CreateFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderRequest.ProtoReflect.Descriptor instead.
func (*CreateFolderRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{11}
}

func (x *CreateFolderRequest) GetItems() []*CreateFolderRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CreateUploadRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CreateUploadRequest) Reset() {
	*x = CreateUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUploadRequest) ProtoMessage() {}

func (x *CreateUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUploadRequest.ProtoReflect.Descriptor instead.
func (*CreateUploadRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{12}
}

func (x *CreateUploadRequest) GetItems() []*CreateUploadRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateUploadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CreateUploadReply_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CreateUploadReply) Reset() {
	*x = CreateUploadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUploadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUploadReply) ProtoMessage() {}

func (x *CreateUploadReply) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUploadReply.ProtoReflect.Descriptor instead.
func (*CreateUploadReply) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{13}
}

func (x *CreateUploadReply) GetItems() []*CreateUploadReply_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateDownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CreateDownloadRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CreateDownloadRequest) Reset() {
	*x = CreateDownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDownloadRequest) ProtoMessage() {}

func (x *CreateDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDownloadRequest.ProtoReflect.Descriptor instead.
func (*CreateDownloadRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{14}
}

func (x *CreateDownloadRequest) GetItems() []*CreateDownloadRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateDownloadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CreateDownloadReply_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CreateDownloadReply) Reset() {
	*x = CreateDownloadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDownloadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDownloadReply) ProtoMessage() {}

func (x *CreateDownloadReply) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDownloadReply.ProtoReflect.Descriptor instead.
func (*CreateDownloadReply) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{15}
}

func (x *CreateDownloadReply) GetItems() []*CreateDownloadReply_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type TrashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*TrashRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TrashRequest) Reset() {
	*x = TrashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrashRequest) ProtoMessage() {}

func (x *TrashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrashRequest.ProtoReflect.Descriptor instead.
func (*TrashRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{16}
}

func (x *TrashRequest) GetItems() []*TrashRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type EmptyTrashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*EmptyTrashRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *EmptyTrashRequest) Reset() {
	*x = EmptyTrashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyTrashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyTrashRequest) ProtoMessage() {}

func (x *EmptyTrashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyTrashRequest.ProtoReflect.Descriptor instead.
func (*EmptyTrashRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{17}
}

func (x *EmptyTrashRequest) GetItems() []*EmptyTrashRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// Provider API
// ====================================================================================================================
type ProviderBrowseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemsPerPage int32                `protobuf:"varint,1,opt,name=items_per_page,json=itemsPerPage,proto3" json:"items_per_page,omitempty"`
	Next         string               `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
	Flags        *BrowseRequest_Flags `protobuf:"bytes,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ProviderBrowseRequest) Reset() {
	*x = ProviderBrowseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderBrowseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderBrowseRequest) ProtoMessage() {}

func (x *ProviderBrowseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderBrowseRequest.ProtoReflect.Descriptor instead.
func (*ProviderBrowseRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{18}
}

func (x *ProviderBrowseRequest) GetItemsPerPage() int32 {
	if x != nil {
		return x.ItemsPerPage
	}
	return 0
}

func (x *ProviderBrowseRequest) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *ProviderBrowseRequest) GetFlags() *BrowseRequest_Flags {
	if x != nil {
		return x.Flags
	}
	return nil
}

type ProviderBrowseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  string   `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*UFile `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ProviderBrowseReply) Reset() {
	*x = ProviderBrowseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderBrowseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderBrowseReply) ProtoMessage() {}

func (x *ProviderBrowseReply) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderBrowseReply.ProtoReflect.Descriptor instead.
func (*ProviderBrowseReply) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{19}
}

func (x *ProviderBrowseReply) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *ProviderBrowseReply) GetItems() []*UFile {
	if x != nil {
		return x.Items
	}
	return nil
}

type GenericFileOperationReply_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        GenericFileOperationReply_Type `protobuf:"varint,1,opt,name=type,proto3,enum=files.GenericFileOperationReply_Type" json:"type,omitempty"`
	Information string                         `protobuf:"bytes,2,opt,name=information,proto3" json:"information,omitempty"`
}

func (x *GenericFileOperationReply_Item) Reset() {
	*x = GenericFileOperationReply_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericFileOperationReply_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericFileOperationReply_Item) ProtoMessage() {}

func (x *GenericFileOperationReply_Item) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericFileOperationReply_Item.ProtoReflect.Descriptor instead.
func (*GenericFileOperationReply_Item) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GenericFileOperationReply_Item) GetType() GenericFileOperationReply_Type {
	if x != nil {
		return x.Type
	}
	return GenericFileOperationReply_TYPE_UNSPECIFIED
}

func (x *GenericFileOperationReply_Item) GetInformation() string {
	if x != nil {
		return x.Information
	}
	return ""
}

type UFile_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *UFile_Metadata) Reset() {
	*x = UFile_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UFile_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UFile_Metadata) ProtoMessage() {}

func (x *UFile_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UFile_Metadata.ProtoReflect.Descriptor instead.
func (*UFile_Metadata) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{1, 0}
}

func (x *UFile_Metadata) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type UFile_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              FileType            `protobuf:"varint,1,opt,name=type,proto3,enum=files.FileType" json:"type,omitempty"`
	Icon              FileIconHint        `protobuf:"varint,2,opt,name=icon,proto3,enum=files.FileIconHint" json:"icon,omitempty"`
	Size              int64               `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	SizeRecursive     int64               `protobuf:"varint,4,opt,name=size_recursive,json=sizeRecursive,proto3" json:"size_recursive,omitempty"`
	ModifiedAt        int64               `protobuf:"varint,5,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	AccessedAt        int64               `protobuf:"varint,6,opt,name=accessed_at,json=accessedAt,proto3" json:"accessed_at,omitempty"`
	CreatedAt         int64               `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UnixMode          int32               `protobuf:"varint,8,opt,name=unix_mode,json=unixMode,proto3" json:"unix_mode,omitempty"`
	UnixOwner         int32               `protobuf:"varint,9,opt,name=unix_owner,json=unixOwner,proto3" json:"unix_owner,omitempty"`
	UnixGroup         int32               `protobuf:"varint,10,opt,name=unix_group,json=unixGroup,proto3" json:"unix_group,omitempty"`
	MetadataDocuments []*MetadataDocument `protobuf:"bytes,11,rep,name=metadata_documents,json=metadataDocuments,proto3" json:"metadata_documents,omitempty"`
}

func (x *UFile_Status) Reset() {
	*x = UFile_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UFile_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UFile_Status) ProtoMessage() {}

func (x *UFile_Status) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UFile_Status.ProtoReflect.Descriptor instead.
func (*UFile_Status) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{1, 1}
}

func (x *UFile_Status) GetType() FileType {
	if x != nil {
		return x.Type
	}
	return FileType_FILE_TYPE_UNSPECIFIED
}

func (x *UFile_Status) GetIcon() FileIconHint {
	if x != nil {
		return x.Icon
	}
	return FileIconHint_FILE_ICON_HINT_UNSPECIFIED
}

func (x *UFile_Status) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UFile_Status) GetSizeRecursive() int64 {
	if x != nil {
		return x.SizeRecursive
	}
	return 0
}

func (x *UFile_Status) GetModifiedAt() int64 {
	if x != nil {
		return x.ModifiedAt
	}
	return 0
}

func (x *UFile_Status) GetAccessedAt() int64 {
	if x != nil {
		return x.AccessedAt
	}
	return 0
}

func (x *UFile_Status) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UFile_Status) GetUnixMode() int32 {
	if x != nil {
		return x.UnixMode
	}
	return 0
}

func (x *UFile_Status) GetUnixOwner() int32 {
	if x != nil {
		return x.UnixOwner
	}
	return 0
}

func (x *UFile_Status) GetUnixGroup() int32 {
	if x != nil {
		return x.UnixGroup
	}
	return 0
}

func (x *UFile_Status) GetMetadataDocuments() []*MetadataDocument {
	if x != nil {
		return x.MetadataDocuments
	}
	return nil
}

type MetadataDocument_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedBy string `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *MetadataDocument_Metadata) Reset() {
	*x = MetadataDocument_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataDocument_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataDocument_Metadata) ProtoMessage() {}

func (x *MetadataDocument_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataDocument_Metadata.ProtoReflect.Descriptor instead.
func (*MetadataDocument_Metadata) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2, 0}
}

func (x *MetadataDocument_Metadata) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MetadataDocument_Metadata) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MetadataDocument_Metadata) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type MetadataDocument_Specification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId      string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateVersion string `protobuf:"bytes,2,opt,name=template_version,json=templateVersion,proto3" json:"template_version,omitempty"`
	Changelog       string `protobuf:"bytes,3,opt,name=changelog,proto3" json:"changelog,omitempty"`
	Document        string `protobuf:"bytes,4,opt,name=document,proto3" json:"document,omitempty"` // only available is was_deleted = false.
	WasDeleted      bool   `protobuf:"varint,5,opt,name=was_deleted,json=wasDeleted,proto3" json:"was_deleted,omitempty"`
}

func (x *MetadataDocument_Specification) Reset() {
	*x = MetadataDocument_Specification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataDocument_Specification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataDocument_Specification) ProtoMessage() {}

func (x *MetadataDocument_Specification) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataDocument_Specification.ProtoReflect.Descriptor instead.
func (*MetadataDocument_Specification) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2, 1}
}

func (x *MetadataDocument_Specification) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *MetadataDocument_Specification) GetTemplateVersion() string {
	if x != nil {
		return x.TemplateVersion
	}
	return ""
}

func (x *MetadataDocument_Specification) GetChangelog() string {
	if x != nil {
		return x.Changelog
	}
	return ""
}

func (x *MetadataDocument_Specification) GetDocument() string {
	if x != nil {
		return x.Document
	}
	return ""
}

func (x *MetadataDocument_Specification) GetWasDeleted() bool {
	if x != nil {
		return x.WasDeleted
	}
	return false
}

type MetadataDocument_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Approval *MetadataDocument_ApprovalStatus `protobuf:"bytes,1,opt,name=approval,proto3" json:"approval,omitempty"`
}

func (x *MetadataDocument_Status) Reset() {
	*x = MetadataDocument_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataDocument_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataDocument_Status) ProtoMessage() {}

func (x *MetadataDocument_Status) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataDocument_Status.ProtoReflect.Descriptor instead.
func (*MetadataDocument_Status) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2, 2}
}

func (x *MetadataDocument_Status) GetApproval() *MetadataDocument_ApprovalStatus {
	if x != nil {
		return x.Approval
	}
	return nil
}

type MetadataDocument_ApprovalStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Contents:
	//
	//	*MetadataDocument_ApprovalStatus_Approved_
	//	*MetadataDocument_ApprovalStatus_Pending_
	//	*MetadataDocument_ApprovalStatus_Rejected_
	//	*MetadataDocument_ApprovalStatus_NotRequired_
	Contents isMetadataDocument_ApprovalStatus_Contents `protobuf_oneof:"contents"`
}

func (x *MetadataDocument_ApprovalStatus) Reset() {
	*x = MetadataDocument_ApprovalStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataDocument_ApprovalStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataDocument_ApprovalStatus) ProtoMessage() {}

func (x *MetadataDocument_ApprovalStatus) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataDocument_ApprovalStatus.ProtoReflect.Descriptor instead.
func (*MetadataDocument_ApprovalStatus) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2, 3}
}

func (m *MetadataDocument_ApprovalStatus) GetContents() isMetadataDocument_ApprovalStatus_Contents {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (x *MetadataDocument_ApprovalStatus) GetApproved() *MetadataDocument_ApprovalStatus_Approved {
	if x, ok := x.GetContents().(*MetadataDocument_ApprovalStatus_Approved_); ok {
		return x.Approved
	}
	return nil
}

func (x *MetadataDocument_ApprovalStatus) GetPending() *MetadataDocument_ApprovalStatus_Pending {
	if x, ok := x.GetContents().(*MetadataDocument_ApprovalStatus_Pending_); ok {
		return x.Pending
	}
	return nil
}

func (x *MetadataDocument_ApprovalStatus) GetRejected() *MetadataDocument_ApprovalStatus_Rejected {
	if x, ok := x.GetContents().(*MetadataDocument_ApprovalStatus_Rejected_); ok {
		return x.Rejected
	}
	return nil
}

func (x *MetadataDocument_ApprovalStatus) GetNotRequired() *MetadataDocument_ApprovalStatus_NotRequired {
	if x, ok := x.GetContents().(*MetadataDocument_ApprovalStatus_NotRequired_); ok {
		return x.NotRequired
	}
	return nil
}

type isMetadataDocument_ApprovalStatus_Contents interface {
	isMetadataDocument_ApprovalStatus_Contents()
}

type MetadataDocument_ApprovalStatus_Approved_ struct {
	Approved *MetadataDocument_ApprovalStatus_Approved `protobuf:"bytes,1,opt,name=approved,proto3,oneof"`
}

type MetadataDocument_ApprovalStatus_Pending_ struct {
	Pending *MetadataDocument_ApprovalStatus_Pending `protobuf:"bytes,2,opt,name=pending,proto3,oneof"`
}

type MetadataDocument_ApprovalStatus_Rejected_ struct {
	Rejected *MetadataDocument_ApprovalStatus_Rejected `protobuf:"bytes,3,opt,name=rejected,proto3,oneof"`
}

type MetadataDocument_ApprovalStatus_NotRequired_ struct {
	NotRequired *MetadataDocument_ApprovalStatus_NotRequired `protobuf:"bytes,4,opt,name=not_required,json=notRequired,proto3,oneof"`
}

func (*MetadataDocument_ApprovalStatus_Approved_) isMetadataDocument_ApprovalStatus_Contents() {}

func (*MetadataDocument_ApprovalStatus_Pending_) isMetadataDocument_ApprovalStatus_Contents() {}

func (*MetadataDocument_ApprovalStatus_Rejected_) isMetadataDocument_ApprovalStatus_Contents() {}

func (*MetadataDocument_ApprovalStatus_NotRequired_) isMetadataDocument_ApprovalStatus_Contents() {}

type MetadataDocument_ApprovalStatus_Approved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApprovedBy string `protobuf:"bytes,1,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
}

func (x *MetadataDocument_ApprovalStatus_Approved) Reset() {
	*x = MetadataDocument_ApprovalStatus_Approved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataDocument_ApprovalStatus_Approved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataDocument_ApprovalStatus_Approved) ProtoMessage() {}

func (x *MetadataDocument_ApprovalStatus_Approved) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataDocument_ApprovalStatus_Approved.ProtoReflect.Descriptor instead.
func (*MetadataDocument_ApprovalStatus_Approved) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2, 3, 0}
}

func (x *MetadataDocument_ApprovalStatus_Approved) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

type MetadataDocument_ApprovalStatus_Pending struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataDocument_ApprovalStatus_Pending) Reset() {
	*x = MetadataDocument_ApprovalStatus_Pending{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataDocument_ApprovalStatus_Pending) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataDocument_ApprovalStatus_Pending) ProtoMessage() {}

func (x *MetadataDocument_ApprovalStatus_Pending) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataDocument_ApprovalStatus_Pending.ProtoReflect.Descriptor instead.
func (*MetadataDocument_ApprovalStatus_Pending) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2, 3, 1}
}

type MetadataDocument_ApprovalStatus_Rejected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RejectedBy string `protobuf:"bytes,1,opt,name=rejected_by,json=rejectedBy,proto3" json:"rejected_by,omitempty"`
}

func (x *MetadataDocument_ApprovalStatus_Rejected) Reset() {
	*x = MetadataDocument_ApprovalStatus_Rejected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataDocument_ApprovalStatus_Rejected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataDocument_ApprovalStatus_Rejected) ProtoMessage() {}

func (x *MetadataDocument_ApprovalStatus_Rejected) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataDocument_ApprovalStatus_Rejected.ProtoReflect.Descriptor instead.
func (*MetadataDocument_ApprovalStatus_Rejected) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2, 3, 2}
}

func (x *MetadataDocument_ApprovalStatus_Rejected) GetRejectedBy() string {
	if x != nil {
		return x.RejectedBy
	}
	return ""
}

type MetadataDocument_ApprovalStatus_NotRequired struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataDocument_ApprovalStatus_NotRequired) Reset() {
	*x = MetadataDocument_ApprovalStatus_NotRequired{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataDocument_ApprovalStatus_NotRequired) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataDocument_ApprovalStatus_NotRequired) ProtoMessage() {}

func (x *MetadataDocument_ApprovalStatus_NotRequired) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataDocument_ApprovalStatus_NotRequired.ProtoReflect.Descriptor instead.
func (*MetadataDocument_ApprovalStatus_NotRequired) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2, 3, 3}
}

type BrowseRequest_Flags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludePermissions bool `protobuf:"varint,1,opt,name=include_permissions,json=includePermissions,proto3" json:"include_permissions,omitempty"`
	IncludeTimestamps  bool `protobuf:"varint,2,opt,name=include_timestamps,json=includeTimestamps,proto3" json:"include_timestamps,omitempty"`
	IncludeSizes       bool `protobuf:"varint,3,opt,name=include_sizes,json=includeSizes,proto3" json:"include_sizes,omitempty"`
	IncludeUnixInfo    bool `protobuf:"varint,4,opt,name=include_unix_info,json=includeUnixInfo,proto3" json:"include_unix_info,omitempty"`
	IncludeMetadata    bool `protobuf:"varint,5,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"`
	FilterHiddenFiles  bool `protobuf:"varint,6,opt,name=filter_hidden_files,json=filterHiddenFiles,proto3" json:"filter_hidden_files,omitempty"`
}

func (x *BrowseRequest_Flags) Reset() {
	*x = BrowseRequest_Flags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseRequest_Flags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseRequest_Flags) ProtoMessage() {}

func (x *BrowseRequest_Flags) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseRequest_Flags.ProtoReflect.Descriptor instead.
func (*BrowseRequest_Flags) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{3, 0}
}

func (x *BrowseRequest_Flags) GetIncludePermissions() bool {
	if x != nil {
		return x.IncludePermissions
	}
	return false
}

func (x *BrowseRequest_Flags) GetIncludeTimestamps() bool {
	if x != nil {
		return x.IncludeTimestamps
	}
	return false
}

func (x *BrowseRequest_Flags) GetIncludeSizes() bool {
	if x != nil {
		return x.IncludeSizes
	}
	return false
}

func (x *BrowseRequest_Flags) GetIncludeUnixInfo() bool {
	if x != nil {
		return x.IncludeUnixInfo
	}
	return false
}

func (x *BrowseRequest_Flags) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

func (x *BrowseRequest_Flags) GetFilterHiddenFiles() bool {
	if x != nil {
		return x.FilterHiddenFiles
	}
	return false
}

type MoveRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourcePath      string              `protobuf:"bytes,1,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	DestinationPath string              `protobuf:"bytes,2,opt,name=destination_path,json=destinationPath,proto3" json:"destination_path,omitempty"`
	Policy          WriteConflictPolicy `protobuf:"varint,3,opt,name=policy,proto3,enum=files.WriteConflictPolicy" json:"policy,omitempty"`
}

func (x *MoveRequest_Item) Reset() {
	*x = MoveRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRequest_Item) ProtoMessage() {}

func (x *MoveRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRequest_Item.ProtoReflect.Descriptor instead.
func (*MoveRequest_Item) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{9, 0}
}

func (x *MoveRequest_Item) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *MoveRequest_Item) GetDestinationPath() string {
	if x != nil {
		return x.DestinationPath
	}
	return ""
}

func (x *MoveRequest_Item) GetPolicy() WriteConflictPolicy {
	if x != nil {
		return x.Policy
	}
	return WriteConflictPolicy_WRITE_CONFLICT_POLICY_UNSPECIFIED
}

type CopyRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourcePath      string              `protobuf:"bytes,1,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	DestinationPath string              `protobuf:"bytes,2,opt,name=destination_path,json=destinationPath,proto3" json:"destination_path,omitempty"`
	Policy          WriteConflictPolicy `protobuf:"varint,3,opt,name=policy,proto3,enum=files.WriteConflictPolicy" json:"policy,omitempty"`
}

func (x *CopyRequest_Item) Reset() {
	*x = CopyRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyRequest_Item) ProtoMessage() {}

func (x *CopyRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyRequest_Item.ProtoReflect.Descriptor instead.
func (*CopyRequest_Item) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{10, 0}
}

func (x *CopyRequest_Item) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *CopyRequest_Item) GetDestinationPath() string {
	if x != nil {
		return x.DestinationPath
	}
	return ""
}

func (x *CopyRequest_Item) GetPolicy() WriteConflictPolicy {
	if x != nil {
		return x.Policy
	}
	return WriteConflictPolicy_WRITE_CONFLICT_POLICY_UNSPECIFIED
}

type CreateFolderRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination string              `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Policy      WriteConflictPolicy `protobuf:"varint,2,opt,name=policy,proto3,enum=files.WriteConflictPolicy" json:"policy,omitempty"`
}

func (x *CreateFolderRequest_Item) Reset() {
	*x = CreateFolderRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFolderRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderRequest_Item) ProtoMessage() {}

func (x *CreateFolderRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderRequest_Item.ProtoReflect.Descriptor instead.
func (*CreateFolderRequest_Item) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{11, 0}
}

func (x *CreateFolderRequest_Item) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *CreateFolderRequest_Item) GetPolicy() WriteConflictPolicy {
	if x != nil {
		return x.Policy
	}
	return WriteConflictPolicy_WRITE_CONFLICT_POLICY_UNSPECIFIED
}

type CreateUploadRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string                         `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Policy  WriteConflictPolicy            `protobuf:"varint,2,opt,name=policy,proto3,enum=files.WriteConflictPolicy" json:"policy,omitempty"`
	Protocl []CreateUploadRequest_Protocol `protobuf:"varint,3,rep,packed,name=protocl,proto3,enum=files.CreateUploadRequest_Protocol" json:"protocl,omitempty"`
}

func (x *CreateUploadRequest_Item) Reset() {
	*x = CreateUploadRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUploadRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUploadRequest_Item) ProtoMessage() {}

func (x *CreateUploadRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUploadRequest_Item.ProtoReflect.Descriptor instead.
func (*CreateUploadRequest_Item) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CreateUploadRequest_Item) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateUploadRequest_Item) GetPolicy() WriteConflictPolicy {
	if x != nil {
		return x.Policy
	}
	return WriteConflictPolicy_WRITE_CONFLICT_POLICY_UNSPECIFIED
}

func (x *CreateUploadRequest_Item) GetProtocl() []CreateUploadRequest_Protocol {
	if x != nil {
		return x.Protocl
	}
	return nil
}

type CreateUploadReply_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string                       `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Token    string                       `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Protocol CreateUploadRequest_Protocol `protobuf:"varint,3,opt,name=protocol,proto3,enum=files.CreateUploadRequest_Protocol" json:"protocol,omitempty"`
}

func (x *CreateUploadReply_Item) Reset() {
	*x = CreateUploadReply_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUploadReply_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUploadReply_Item) ProtoMessage() {}

func (x *CreateUploadReply_Item) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUploadReply_Item.ProtoReflect.Descriptor instead.
func (*CreateUploadReply_Item) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{13, 0}
}

func (x *CreateUploadReply_Item) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CreateUploadReply_Item) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateUploadReply_Item) GetProtocol() CreateUploadRequest_Protocol {
	if x != nil {
		return x.Protocol
	}
	return CreateUploadRequest_PROTOCOL_UNSPECIFIED
}

type CreateDownloadRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *CreateDownloadRequest_Item) Reset() {
	*x = CreateDownloadRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDownloadRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDownloadRequest_Item) ProtoMessage() {}

func (x *CreateDownloadRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDownloadRequest_Item.ProtoReflect.Descriptor instead.
func (*CreateDownloadRequest_Item) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CreateDownloadRequest_Item) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type CreateDownloadReply_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *CreateDownloadReply_Item) Reset() {
	*x = CreateDownloadReply_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDownloadReply_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDownloadReply_Item) ProtoMessage() {}

func (x *CreateDownloadReply_Item) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDownloadReply_Item.ProtoReflect.Descriptor instead.
func (*CreateDownloadReply_Item) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CreateDownloadReply_Item) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type TrashRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *TrashRequest_Item) Reset() {
	*x = TrashRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrashRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrashRequest_Item) ProtoMessage() {}

func (x *TrashRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrashRequest_Item.ProtoReflect.Descriptor instead.
func (*TrashRequest_Item) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{16, 0}
}

func (x *TrashRequest_Item) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type EmptyTrashRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathToTrashFolder string `protobuf:"bytes,1,opt,name=path_to_trash_folder,json=pathToTrashFolder,proto3" json:"path_to_trash_folder,omitempty"`
}

func (x *EmptyTrashRequest_Item) Reset() {
	*x = EmptyTrashRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyTrashRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyTrashRequest_Item) ProtoMessage() {}

func (x *EmptyTrashRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyTrashRequest_Item.ProtoReflect.Descriptor instead.
func (*EmptyTrashRequest_Item) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{17, 0}
}

func (x *EmptyTrashRequest_Item) GetPathToTrashFolder() string {
	if x != nil {
		return x.PathToTrashFolder
	}
	return ""
}

var File_files_proto protoreflect.FileDescriptor

var file_files_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x1a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a,
	0x63, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22, 0x9f, 0x04, 0x0a, 0x05, 0x55, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x55, 0x46,
	0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x55,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x1e, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x1a, 0x95, 0x03, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x63,
	0x6f, 0x6e, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69,
	0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x78,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x78, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x78, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x78, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x46, 0x0a, 0x12, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x8c, 0x08, 0x0a, 0x10,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b,
	0x0a, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x58, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xb6, 0x01,
	0x0a, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x73, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x61, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x1a, 0x4c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x42, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x1a, 0xd3, 0x03, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x4d, 0x0a, 0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x12, 0x57, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x4e, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6e,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x1a, 0x2b, 0x0a, 0x08, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x1a, 0x09, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x1a, 0x2b, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x1a,
	0x0d, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0a,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x91, 0x03, 0x0a, 0x0d, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x93, 0x02, 0x0a, 0x05, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e,
	0x0a, 0x13, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xa6,
	0x01, 0x0a, 0x0b, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65,
	0x78, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x55, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x73, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0xa6, 0x01, 0x0a,
	0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x12, 0x22, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x55, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x50,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x6f, 0x6f, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x12, 0x22, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x55, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x73, 0x2e,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x86, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0xc5, 0x01,
	0x0a, 0x0b, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x86, 0x01, 0x0a,
	0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x32, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0xaa, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x5c, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x22, 0x98, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x1a, 0x8d, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x32,
	0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6c, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6c, 0x22, 0x3a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4f, 0x4c, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x22, 0xc3, 0x01,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x79, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x22, 0x6c, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x1a, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x70, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a,
	0x22, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0x1a, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22,
	0x81, 0x01, 0x0a, 0x11, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x54, 0x72, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x54, 0x72, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x37, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x5f, 0x74, 0x72,
	0x61, 0x73, 0x68, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x70, 0x61, 0x74, 0x68, 0x54, 0x6f, 0x54, 0x72, 0x61, 0x73, 0x68, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x4d, 0x0a, 0x13, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x55, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0xcb, 0x01, 0x0a, 0x13, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x25, 0x0a, 0x21, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49,
	0x43, 0x54, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x57, 0x52, 0x49, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59,
	0x5f, 0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x57, 0x52, 0x49,
	0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x5f, 0x50, 0x4f, 0x4c, 0x49,
	0x43, 0x59, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x57,
	0x52, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x5f, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x03, 0x12, 0x26,
	0x0a, 0x22, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54,
	0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x5f, 0x52, 0x45,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x2a, 0x52, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x02, 0x2a, 0x95, 0x01, 0x0a, 0x0c, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x1a, 0x46,
	0x49, 0x4c, 0x45, 0x5f, 0x49, 0x43, 0x4f, 0x4e, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x46,
	0x49, 0x4c, 0x45, 0x5f, 0x49, 0x43, 0x4f, 0x4e, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x54, 0x52,
	0x41, 0x53, 0x48, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x43,
	0x4f, 0x4e, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x10, 0x02, 0x12, 0x19,
	0x0a, 0x15, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x43, 0x4f, 0x4e, 0x5f, 0x48, 0x49, 0x4e, 0x54,
	0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x53, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x49, 0x43, 0x4f, 0x4e, 0x5f, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x4a, 0x4f, 0x42, 0x53,
	0x10, 0x04, 0x32, 0xad, 0x05, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x12, 0x14, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x14, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x0f, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1d,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x12, 0x3c, 0x0a, 0x04,
	0x4d, 0x6f, 0x76, 0x65, 0x12, 0x12, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x04, 0x43, 0x6f,
	0x70, 0x79, 0x12, 0x12, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4a, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x73,
	0x68, 0x12, 0x13, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x54, 0x72, 0x61, 0x73, 0x68, 0x12, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x54, 0x72, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x32, 0x5a, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x39,
	0x0a, 0x18, 0x64, 0x6b, 0x2e, 0x73, 0x64, 0x75, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x1d, 0x75, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x64, 0x6b, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_files_proto_rawDescOnce sync.Once
	file_files_proto_rawDescData = file_files_proto_rawDesc
)

func file_files_proto_rawDescGZIP() []byte {
	file_files_proto_rawDescOnce.Do(func() {
		file_files_proto_rawDescData = protoimpl.X.CompressGZIP(file_files_proto_rawDescData)
	})
	return file_files_proto_rawDescData
}

var file_files_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_files_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_files_proto_goTypes = []interface{}{
	(WriteConflictPolicy)(0),                            // 0: files.WriteConflictPolicy
	(FileType)(0),                                       // 1: files.FileType
	(FileIconHint)(0),                                   // 2: files.FileIconHint
	(GenericFileOperationReply_Type)(0),                 // 3: files.GenericFileOperationReply.Type
	(CreateUploadRequest_Protocol)(0),                   // 4: files.CreateUploadRequest.Protocol
	(*GenericFileOperationReply)(nil),                   // 5: files.GenericFileOperationReply
	(*UFile)(nil),                                       // 6: files.UFile
	(*MetadataDocument)(nil),                            // 7: files.MetadataDocument
	(*BrowseRequest)(nil),                               // 8: files.BrowseRequest
	(*BrowseReply)(nil),                                 // 9: files.BrowseReply
	(*SearchRequest)(nil),                               // 10: files.SearchRequest
	(*SearchReply)(nil),                                 // 11: files.SearchReply
	(*StreamingSearchRequest)(nil),                      // 12: files.StreamingSearchRequest
	(*StreamingSearchReply)(nil),                        // 13: files.StreamingSearchReply
	(*MoveRequest)(nil),                                 // 14: files.MoveRequest
	(*CopyRequest)(nil),                                 // 15: files.CopyRequest
	(*CreateFolderRequest)(nil),                         // 16: files.CreateFolderRequest
	(*CreateUploadRequest)(nil),                         // 17: files.CreateUploadRequest
	(*CreateUploadReply)(nil),                           // 18: files.CreateUploadReply
	(*CreateDownloadRequest)(nil),                       // 19: files.CreateDownloadRequest
	(*CreateDownloadReply)(nil),                         // 20: files.CreateDownloadReply
	(*TrashRequest)(nil),                                // 21: files.TrashRequest
	(*EmptyTrashRequest)(nil),                           // 22: files.EmptyTrashRequest
	(*ProviderBrowseRequest)(nil),                       // 23: files.ProviderBrowseRequest
	(*ProviderBrowseReply)(nil),                         // 24: files.ProviderBrowseReply
	(*GenericFileOperationReply_Item)(nil),              // 25: files.GenericFileOperationReply.Item
	(*UFile_Metadata)(nil),                              // 26: files.UFile.Metadata
	(*UFile_Status)(nil),                                // 27: files.UFile.Status
	(*MetadataDocument_Metadata)(nil),                   // 28: files.MetadataDocument.Metadata
	(*MetadataDocument_Specification)(nil),              // 29: files.MetadataDocument.Specification
	(*MetadataDocument_Status)(nil),                     // 30: files.MetadataDocument.Status
	(*MetadataDocument_ApprovalStatus)(nil),             // 31: files.MetadataDocument.ApprovalStatus
	(*MetadataDocument_ApprovalStatus_Approved)(nil),    // 32: files.MetadataDocument.ApprovalStatus.Approved
	(*MetadataDocument_ApprovalStatus_Pending)(nil),     // 33: files.MetadataDocument.ApprovalStatus.Pending
	(*MetadataDocument_ApprovalStatus_Rejected)(nil),    // 34: files.MetadataDocument.ApprovalStatus.Rejected
	(*MetadataDocument_ApprovalStatus_NotRequired)(nil), // 35: files.MetadataDocument.ApprovalStatus.NotRequired
	(*BrowseRequest_Flags)(nil),                         // 36: files.BrowseRequest.Flags
	(*MoveRequest_Item)(nil),                            // 37: files.MoveRequest.Item
	(*CopyRequest_Item)(nil),                            // 38: files.CopyRequest.Item
	(*CreateFolderRequest_Item)(nil),                    // 39: files.CreateFolderRequest.Item
	(*CreateUploadRequest_Item)(nil),                    // 40: files.CreateUploadRequest.Item
	(*CreateUploadReply_Item)(nil),                      // 41: files.CreateUploadReply.Item
	(*CreateDownloadRequest_Item)(nil),                  // 42: files.CreateDownloadRequest.Item
	(*CreateDownloadReply_Item)(nil),                    // 43: files.CreateDownloadReply.Item
	(*TrashRequest_Item)(nil),                           // 44: files.TrashRequest.Item
	(*EmptyTrashRequest_Item)(nil),                      // 45: files.EmptyTrashRequest.Item
	(*accounting.Product)(nil),                          // 46: accounting.Product
	(*drives.DriveSupport)(nil),                         // 47: drives.DriveSupport
}
var file_files_proto_depIdxs = []int32{
	25, // 0: files.GenericFileOperationReply.items:type_name -> files.GenericFileOperationReply.Item
	26, // 1: files.UFile.metadata:type_name -> files.UFile.Metadata
	27, // 2: files.UFile.status:type_name -> files.UFile.Status
	28, // 3: files.MetadataDocument.metadata:type_name -> files.MetadataDocument.Metadata
	29, // 4: files.MetadataDocument.specification:type_name -> files.MetadataDocument.Specification
	30, // 5: files.MetadataDocument.status:type_name -> files.MetadataDocument.Status
	36, // 6: files.BrowseRequest.flags:type_name -> files.BrowseRequest.Flags
	6,  // 7: files.BrowseReply.items:type_name -> files.UFile
	46, // 8: files.BrowseReply.products:type_name -> accounting.Product
	47, // 9: files.BrowseReply.support:type_name -> drives.DriveSupport
	36, // 10: files.SearchRequest.flags:type_name -> files.BrowseRequest.Flags
	6,  // 11: files.SearchReply.items:type_name -> files.UFile
	46, // 12: files.SearchReply.products:type_name -> accounting.Product
	47, // 13: files.SearchReply.support:type_name -> drives.DriveSupport
	36, // 14: files.StreamingSearchRequest.flags:type_name -> files.BrowseRequest.Flags
	6,  // 15: files.StreamingSearchReply.items:type_name -> files.UFile
	46, // 16: files.StreamingSearchReply.products:type_name -> accounting.Product
	47, // 17: files.StreamingSearchReply.support:type_name -> drives.DriveSupport
	37, // 18: files.MoveRequest.items:type_name -> files.MoveRequest.Item
	38, // 19: files.CopyRequest.items:type_name -> files.CopyRequest.Item
	39, // 20: files.CreateFolderRequest.items:type_name -> files.CreateFolderRequest.Item
	40, // 21: files.CreateUploadRequest.items:type_name -> files.CreateUploadRequest.Item
	41, // 22: files.CreateUploadReply.items:type_name -> files.CreateUploadReply.Item
	42, // 23: files.CreateDownloadRequest.items:type_name -> files.CreateDownloadRequest.Item
	43, // 24: files.CreateDownloadReply.items:type_name -> files.CreateDownloadReply.Item
	44, // 25: files.TrashRequest.items:type_name -> files.TrashRequest.Item
	45, // 26: files.EmptyTrashRequest.items:type_name -> files.EmptyTrashRequest.Item
	36, // 27: files.ProviderBrowseRequest.flags:type_name -> files.BrowseRequest.Flags
	6,  // 28: files.ProviderBrowseReply.items:type_name -> files.UFile
	3,  // 29: files.GenericFileOperationReply.Item.type:type_name -> files.GenericFileOperationReply.Type
	1,  // 30: files.UFile.Status.type:type_name -> files.FileType
	2,  // 31: files.UFile.Status.icon:type_name -> files.FileIconHint
	7,  // 32: files.UFile.Status.metadata_documents:type_name -> files.MetadataDocument
	31, // 33: files.MetadataDocument.Status.approval:type_name -> files.MetadataDocument.ApprovalStatus
	32, // 34: files.MetadataDocument.ApprovalStatus.approved:type_name -> files.MetadataDocument.ApprovalStatus.Approved
	33, // 35: files.MetadataDocument.ApprovalStatus.pending:type_name -> files.MetadataDocument.ApprovalStatus.Pending
	34, // 36: files.MetadataDocument.ApprovalStatus.rejected:type_name -> files.MetadataDocument.ApprovalStatus.Rejected
	35, // 37: files.MetadataDocument.ApprovalStatus.not_required:type_name -> files.MetadataDocument.ApprovalStatus.NotRequired
	0,  // 38: files.MoveRequest.Item.policy:type_name -> files.WriteConflictPolicy
	0,  // 39: files.CopyRequest.Item.policy:type_name -> files.WriteConflictPolicy
	0,  // 40: files.CreateFolderRequest.Item.policy:type_name -> files.WriteConflictPolicy
	0,  // 41: files.CreateUploadRequest.Item.policy:type_name -> files.WriteConflictPolicy
	4,  // 42: files.CreateUploadRequest.Item.protocl:type_name -> files.CreateUploadRequest.Protocol
	4,  // 43: files.CreateUploadReply.Item.protocol:type_name -> files.CreateUploadRequest.Protocol
	8,  // 44: files.FilesService.Browse:input_type -> files.BrowseRequest
	10, // 45: files.FilesService.Search:input_type -> files.SearchRequest
	12, // 46: files.FilesService.StreamingSearch:input_type -> files.StreamingSearchRequest
	14, // 47: files.FilesService.Move:input_type -> files.MoveRequest
	15, // 48: files.FilesService.Copy:input_type -> files.CopyRequest
	16, // 49: files.FilesService.CreateFolder:input_type -> files.CreateFolderRequest
	17, // 50: files.FilesService.CreateUpload:input_type -> files.CreateUploadRequest
	19, // 51: files.FilesService.CreateDownload:input_type -> files.CreateDownloadRequest
	21, // 52: files.FilesService.Trash:input_type -> files.TrashRequest
	22, // 53: files.FilesService.EmptyTrash:input_type -> files.EmptyTrashRequest
	23, // 54: files.FilesProviderService.Browse:input_type -> files.ProviderBrowseRequest
	9,  // 55: files.FilesService.Browse:output_type -> files.BrowseReply
	11, // 56: files.FilesService.Search:output_type -> files.SearchReply
	13, // 57: files.FilesService.StreamingSearch:output_type -> files.StreamingSearchReply
	5,  // 58: files.FilesService.Move:output_type -> files.GenericFileOperationReply
	5,  // 59: files.FilesService.Copy:output_type -> files.GenericFileOperationReply
	5,  // 60: files.FilesService.CreateFolder:output_type -> files.GenericFileOperationReply
	18, // 61: files.FilesService.CreateUpload:output_type -> files.CreateUploadReply
	20, // 62: files.FilesService.CreateDownload:output_type -> files.CreateDownloadReply
	5,  // 63: files.FilesService.Trash:output_type -> files.GenericFileOperationReply
	5,  // 64: files.FilesService.EmptyTrash:output_type -> files.GenericFileOperationReply
	24, // 65: files.FilesProviderService.Browse:output_type -> files.ProviderBrowseReply
	55, // [55:66] is the sub-list for method output_type
	44, // [44:55] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_files_proto_init() }
func file_files_proto_init() {
	if File_files_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_files_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericFileOperationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUploadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDownloadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyTrashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderBrowseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderBrowseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericFileOperationReply_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UFile_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UFile_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataDocument_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataDocument_Specification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataDocument_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataDocument_ApprovalStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataDocument_ApprovalStatus_Approved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataDocument_ApprovalStatus_Pending); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataDocument_ApprovalStatus_Rejected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataDocument_ApprovalStatus_NotRequired); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseRequest_Flags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFolderRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUploadRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUploadReply_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDownloadRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDownloadReply_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrashRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyTrashRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_files_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*MetadataDocument_ApprovalStatus_Approved_)(nil),
		(*MetadataDocument_ApprovalStatus_Pending_)(nil),
		(*MetadataDocument_ApprovalStatus_Rejected_)(nil),
		(*MetadataDocument_ApprovalStatus_NotRequired_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_files_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_files_proto_goTypes,
		DependencyIndexes: file_files_proto_depIdxs,
		EnumInfos:         file_files_proto_enumTypes,
		MessageInfos:      file_files_proto_msgTypes,
	}.Build()
	File_files_proto = out.File
	file_files_proto_rawDesc = nil
	file_files_proto_goTypes = nil
	file_files_proto_depIdxs = nil
}
